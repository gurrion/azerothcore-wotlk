# Railway configuration for AzerothCore WoTLK
[build]
# Use our optimized Dockerfile
builder = "dockerfile"
dockerfilePath = "Dockerfile.railway"

[deploy]
# Health check endpoint
healthcheckPath = "/"
healthcheckTimeout = 100
restartPolicyType = "ON_FAILURE"
restartPolicyMaxRetries = 10

# Environment variables
[env]
# Database configuration - Railway will provide these automatically
DATABASE_URL = "${{RAILWAY_DATABASE_URL}}"

# AzerothCore specific variables
AC_LOGIN_DATABASE_INFO = "${{RAILWAY_DATABASE_URL}}"
AC_WORLD_DATABASE_INFO = "${{RAILWAY_DATABASE_URL}}"
AC_CHARACTER_DATABASE_INFO = "${{RAILWAY_DATABASE_URL}}"

# Server configuration
DOCKER_DB_ROOT_PASSWORD = "${{RAILWAY_DATABASE_PASSWORD}}"
DOCKER_DB_EXTERNAL_PORT = "3306"
DOCKER_AUTH_EXTERNAL_PORT = "3724"
DOCKER_WORLD_EXTERNAL_PORT = "8085"
DOCKER_SOAP_EXTERNAL_PORT = "7878"

# Disable interactive mode
AC_DISABLE_INTERACTIVE = "1"
AC_CLOSE_IDLE_CONNECTIONS = "0"
AC_UPDATES_ENABLE_DATABASES = "0"

# Process configuration - multiple services in one container
[[processes.authserver]]
name = "authserver"
command = ["authserver"]
env = { ACORE_COMPONENT = "authserver" }
port = 3724

[[processes.worldserver]]
name = "worldserver"
command = ["worldserver"]
env = { ACORE_COMPONENT = "worldserver" }
port = 8085
depends_on = ["authserver"]

# Database migration process (runs once)
[[processes.db-import]]
name = "db-import"
command = ["dbimport"]
env = { ACORE_COMPONENT = "dbimport" }
oneShot = true
depends_on = ["authserver"]

# Static files configuration
[static]
route = "/"

# Volumes for persistent data
[[volumes]]
name = "azerothcore-data"
mountPath = "/azerothcore/env/dist/etc"

[[volumes]]
name = "azerothcore-logs"
mountPath = "/azerothcore/env/dist/logs"
