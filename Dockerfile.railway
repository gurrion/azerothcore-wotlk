# Dockerfile optimizado para Railway - AzerothCore WoTLK
ARG UBUNTU_VERSION=22.04

# Base image with all dependencies
FROM ubuntu:$UBUNTU_VERSION AS base

ARG TZ=Etc/UTC
ARG DEBIAN_FRONTEND=noninteractive

# Install base dependencies
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        build-essential ccache libtool cmake-data make cmake clang \
        git lsb-base curl unzip default-mysql-client openssl \
        default-libmysqlclient-dev libboost-all-dev libssl-dev libmysql++-dev \
        libreadline-dev zlib1g-dev libbz2-dev libncurses5-dev \
        libmysqlclient21 libreadline8 gettext-base \
        tzdata ca-certificates && \
    ln -snf "/usr/share/zoneinfo/$TZ" /etc/localtime && \
    echo "$TZ" > /etc/timezone && \
    dpkg-reconfigure --frontend noninteractive tzdata && \
    rm -rf /var/lib/apt/lists/*

# Create azerothcore user and directories
RUN groupadd -r -g 1000 acore && \
    useradd -r -u 1000 -g acore -d /azerothcore -s /bin/bash acore && \
    mkdir -pv /azerothcore && \
    chown acore:acore /azerothcore

# Set working directory
WORKDIR /azerothcore

# Copy source code
COPY --chown=acore:acore . .

# Build AzerothCore
ARG CTOOLS_BUILD="all"
ARG CTYPE="RelWithDebInfo"
ARG CCACHE_CPP2="true"
ARG CSCRIPTPCH="OFF"
ARG CSCRIPTS="static"
ARG CMODULES="static"
ARG CWITH_WARNINGS="ON"

# Configure ccache
ENV CCACHE_DIR="/tmp/ccache"
ENV CCACHE_MAXSIZE="1000MB"
ENV CCACHE_SLOPPINESS="pch_defines,time_macros,include_file_mtime"
ENV CCACHE_COMPRESS=""
ENV CCACHE_COMPRESSLEVEL="9"
ENV CCACHE_COMPILERCHECK="content"

# Build the project
RUN mkdir -p build && \
    cd build && \
    git config --global --add safe.directory /azerothcore && \
    cmake .. \
        -DCMAKE_INSTALL_PREFIX="/azerothcore/env/dist" \
        -DAPPS_BUILD="all" \
        -DTOOLS_BUILD="$CTOOLS_BUILD" \
        -DSCRIPTS="$CSCRIPTS" \
        -DMODULES="$CMODULES" \
        -DWITH_WARNINGS="$CWITH_WARNINGS" \
        -DCMAKE_BUILD_TYPE="$CTYPE" \
        -DCMAKE_CXX_COMPILER="clang++" \
        -DCMAKE_C_COMPILER="clang" \
        -DCMAKE_CXX_COMPILER_LAUNCHER="ccache" \
        -DCMAKE_C_COMPILER_LAUNCHER="ccache" \
        -DBoost_USE_STATIC_LIBS="ON" && \
    cmake --build . --config "$CTYPE" -j $(nproc) && \
    cmake --install . --config "$CTYPE"

# Runtime image
FROM ubuntu:$UBUNTU_VERSION AS runtime

ARG TZ=Etc/UTC
ARG DEBIAN_FRONTEND=noninteractive

# Install runtime dependencies
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        libmysqlclient21 libreadline8 gettext-base \
        default-mysql-client \
        tzdata ca-certificates && \
    ln -snf "/usr/share/zoneinfo/$TZ" /etc/localtime && \
    echo "$TZ" > /etc/timezone && \
    dpkg-reconfigure --frontend noninteractive tzdata && \
    rm -rf /var/lib/apt/lists/*

# Create azerothcore user
RUN groupadd -r -g 1000 acore && \
    useradd -r -u 1000 -g acore -d /azerothcore -s /bin/bash acore

# Create necessary directories
RUN mkdir -pv /azerothcore/env/dist/bin /azerothcore/env/dist/etc /azerothcore/env/dist/logs /azerothcore/env/dist/data

# Copy built binaries and config
COPY --from=base --chown=acore:acore /azerothcore/env/dist/bin/ /azerothcore/env/dist/bin/
COPY --from=base --chown=acore:acore /azerothcore/env/dist/etc/ /azerothcore/env/dist/etc/
COPY --from=base --chown=acore:acore /azerothcore/conf/ /azerothcore/env/dist/etc/
COPY --from=base --chown=acore:acore /azerothcore/data/ /azerothcore/env/dist/data/

# Set permissions
RUN chown -R acore:acore /azerothcore

# Environment variables
ENV PATH="/azerothcore/env/dist/bin:$PATH"
ENV AC_DATA_DIR="/azerothcore/env/dist/data"
ENV AC_LOGS_DIR="/azerothcore/env/dist/logs"
ENV AC_TEMP_DIR="/azerothcore/env/dist/temp"
ENV AC_UPDATES_ENABLE_DATABASES=0
ENV AC_DISABLE_INTERACTIVE=1
ENV AC_CLOSE_IDLE_CONNECTIONS=0

# Copy Railway-specific entrypoint script
COPY --chown=acore:acore apps/docker/railway-entrypoint.sh /azerothcore/entrypoint.sh
RUN chmod +x /azerothcore/entrypoint.sh

# Use Railway entrypoint
ENTRYPOINT ["/bin/bash", "/azerothcore/entrypoint.sh"]
